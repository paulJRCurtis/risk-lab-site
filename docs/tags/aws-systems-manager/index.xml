<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AWS Systems Manager on Risk &amp; Compliance Labs</title><link>http://paulJRCurtis.github.io/risk-lab-site/tags/aws-systems-manager/</link><description>Recent content in AWS Systems Manager on Risk &amp; Compliance Labs</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 23 Aug 2020 15:17:40 +1000</lastBuildDate><atom:link href="http://paulJRCurtis.github.io/risk-lab-site/tags/aws-systems-manager/index.xml" rel="self" type="application/rss+xml"/><item><title>Determine the current OS versions</title><link>http://paulJRCurtis.github.io/risk-lab-site/patching-controls-with-ssm/1-current-os/</link><pubDate>Sun, 23 Aug 2020 15:17:40 +1000</pubDate><guid>http://paulJRCurtis.github.io/risk-lab-site/patching-controls-with-ssm/1-current-os/</guid><description>Use AWS Systems Manager - Inventory to determine the operating systems versions how many instances are running each operating systems.
To set a patch baseline open the AWS Systems Manager console. In the navigation pane, choose Inventory.
If you can only see the AWS Systems Manager home page, you may need to click on the menu icon (â˜°) in the top left to open the navigation pane, and then choose Inventory.</description></item><item><title>Set patch baselines</title><link>http://paulJRCurtis.github.io/risk-lab-site/patching-controls-with-ssm/2-set-patch-baselines/</link><pubDate>Sun, 23 Aug 2020 15:17:40 +1000</pubDate><guid>http://paulJRCurtis.github.io/risk-lab-site/patching-controls-with-ssm/2-set-patch-baselines/</guid><description>As well as providing insight into the environment systems manager allows you to actively manage instances including applying patches. Patch Manager has predefined patch baselines for each operating system it supports. You can use these patch baselines to patch your instances, or you can create your own. In this Jam we will use the predefined patch baselines.
The environment provided for this challenge includes two fleets of EC2 Instances, one fleet includes three Amazon Linux 2 instances, the other two instances running a version of Windows.</description></item><item><title>Review compliance</title><link>http://paulJRCurtis.github.io/risk-lab-site/patching-controls-with-ssm/3-review-compliance/</link><pubDate>Sun, 23 Aug 2020 15:17:40 +1000</pubDate><guid>http://paulJRCurtis.github.io/risk-lab-site/patching-controls-with-ssm/3-review-compliance/</guid><description>Now that you have set the patching baseline for your two patch groups (jam-windows-app-patch-group and jam-linux-app-patch-group) you have something to compare against. You now need to determine the effectiveness of the current manual patching controls. To do this you will identify the number of non-compliant resources.
Use AWS Systems Manager - Compliance to determine the total number of non-compliant resource.
Go to the Compliance screen in Systems Manager, you will see a screen similar to the below.</description></item><item><title>Create a Maintenance Window</title><link>http://paulJRCurtis.github.io/risk-lab-site/patching-controls-with-ssm/4-maintenance-window/</link><pubDate>Sun, 23 Aug 2020 15:17:40 +1000</pubDate><guid>http://paulJRCurtis.github.io/risk-lab-site/patching-controls-with-ssm/4-maintenance-window/</guid><description>AWS Systems Manager Maintenance Windows let you define a schedule for when to perform potentially disruptive actions on your instances such as patching an operating system, updating drivers, or installing software or patches. These may require Systems Manager to perform a restart so these actions should be scheduled appropriately.
Create a maintenance window which you will use to patch the Windows and Amazon Linux 2 instances. The details of the maintenance window details such as time, duration, frequency are all up to you.</description></item><item><title>Create Patch Manager configuration</title><link>http://paulJRCurtis.github.io/risk-lab-site/patching-controls-with-ssm/5-patch-manager-config/</link><pubDate>Sun, 23 Aug 2020 15:17:40 +1000</pubDate><guid>http://paulJRCurtis.github.io/risk-lab-site/patching-controls-with-ssm/5-patch-manager-config/</guid><description>Now that you have setup the patch baselines and the maintenance window there is one final task to configure Patch Manager to automatically apply patches as per your schedule.
Configure Patch Manager to apply patched to both of your patch groups during the maintenance window you set up in the previous task.
From the Patch Manager console choose Configure patching.
Complete the Patch manager configuration by selecting the two patch groups, the maintenance schedule you created earlier, and selecting Scan and install, then click Configure patching.</description></item><item><title>Patching Controls with Systems Manager</title><link>http://paulJRCurtis.github.io/risk-lab-site/patching-controls-with-ssm/</link><pubDate>Sun, 23 Aug 2020 15:17:40 +1000</pubDate><guid>http://paulJRCurtis.github.io/risk-lab-site/patching-controls-with-ssm/</guid><description>Many organizations struggle to keep up with patching requirements. Sometimes one of the challenges is even to know what infrastructure you have. A definitive inventory of the operating systems and software running in the environment is not always easy to come by.
In a cloud environment there are two different approaches based on whether the architecture includes instances that are immutable or non-immutable.
This might seem a confusing statement, but lets break it down.</description></item></channel></rss>