<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Advanced on Risk &amp; Compliance Labs</title><link>/categories/advanced.html</link><description>Recent content in Advanced on Risk &amp; Compliance Labs</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Sat, 01 Aug 2020 15:28:32 +1000</lastBuildDate><atom:link href="/categories/advanced/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction</title><link>/7-preventative-controls-codepipeline/1-intro.html</link><pubDate>Sat, 01 Aug 2020 15:28:32 +1000</pubDate><guid>/7-preventative-controls-codepipeline/1-intro.html</guid><description>An important aspect of infrastructure as code is testing and the ability to ensure it meets standards and control requirements before it reaches production.
In this workshop, we will pass a CloudFormation script written in a language called yaml through AWS CodePipeline. If the CloudFormation script fails any of the checks we will investigate why and correct these. Once the script passes all checks it will be deployed into our environment.</description></item><item><title>Preventative controls with Code Pipeline</title><link>/7-preventative-controls-codepipeline.html</link><pubDate>Sat, 01 Aug 2020 15:28:32 +1000</pubDate><guid>/7-preventative-controls-codepipeline.html</guid><description>A powerful way to implement preventative controls is to embed them into code pipelines.
In this workshop we demonstrate a code pipeline which takes an AWS CloudFormation template and runs checks against it, if it passes the template is then deployed into a testing environment where additional checks are run, and finally if the template meets requirements it can be deployed into the production environment.
Duration The activity should take approximately 30 minutes to complete.</description></item></channel></rss>